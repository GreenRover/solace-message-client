name: Continuous Integration and Delivery
on: [push, pull_request]
jobs:
  install:
    name: 'Installing NPM modules'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '10.16.3'
      - name: 'Running npm ci (if node_modules not cached)'
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci
  lint:
    name: 'Linting'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run lint
  build-solace-message-client:
    name: 'Building solace-message-client'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Building solace-message-client'
        run: npm run solace-message-client:build
      - name: 'Building API Documentation (TypeDoc)'
        run: npm run solace-message-client:typedoc
      - uses: actions/upload-artifact@v2
        with:
          name: solace-message-client
          path: dist/solace-message-client
      - uses: actions/upload-artifact@v2
        with:
          name: solace-message-client-api
          path: dist/solace-message-client-api
  build-testing-app:
    name: 'Building Testing App'
    needs: build-solace-message-client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Downloading solace-message-client'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client
          path: dist/solace-message-client
      - name: 'Building solace-message-client-testing-app'
        run: npm run solace-message-client-testing-app:build
      - uses: actions/upload-artifact@v2
        with:
          name: solace-message-client-testing-app
          path: dist/solace-message-client-testing-app
  test:
    name: 'Unit Testing'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run test:headless
  e2e:
    name: 'E2E Testing'
    needs: [build-testing-app]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Downloading solace-message-client-testing-app'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client-testing-app
          path: dist/solace-message-client-testing-app
      - run: npm run solace-message-client:e2e-ci
  deploy:
    name: 'Deploying TypeDoc and TryMe application to GitHub pages'
    if: github.ref == 'refs/heads/master'
    needs: [build-solace-message-client, build-testing-app, test, e2e, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Downloading solace-message-client-testing-app'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client-testing-app
          path: dist/tryme
      - name: 'Downloading api'
        uses: actions/download-artifact@v2
        with:
          name: solace-message-client-api
          path: dist/api
      - name: 'Deploying testing app to GitHub pages'
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: dist
          clean: true
